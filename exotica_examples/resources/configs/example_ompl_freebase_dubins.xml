<?xml version="1.0" ?>
<PlannerDemoConfig>
  <RRTConnectSolver Name="MySolver">
    <Debug>1</Debug>
    <!-- The planar-floating base of the robot can be configured to be a Dubin's
         state-space for any of the OMPL solvers using the initializer parameters.
         One can also modify the turning radius and whether the space is symmetric. -->
    <IsDubinsStateSpace>1</IsDubinsStateSpace>
    <DubinsStateSpaceTurningRadius>1.0</DubinsStateSpaceTurningRadius>
    <DubinsStateSpaceIsSymmetric>0</DubinsStateSpaceIsSymmetric>
  </RRTConnectSolver>

  <SamplingProblem Name="MyProblem">
    <!-- <Debug>1</Debug> -->

    <PlanningScene>
      <Scene>
        <JointGroup>manipulator_freebase</JointGroup>
        <URDF>{exotica_examples}/resources/robots/iiwa7_freebase.urdf</URDF>
        <SRDF>{exotica_examples}/resources/robots/iiwa7_freebase.srdf</SRDF>
      </Scene>
    </PlanningScene>

    <!-- No taskmaps or constraints defined - see example_ompl.xml and example_ompl_freebase.xml for example usage. -->

    <!-- NB: The StartState is implicitly set to a zero vector, unless specified. -->
    <Goal>2 0 1.57 2.16939 0.313509 -2.2954 1.94413 -0.276843 0.567194 0</Goal>

    <!-- We need to set floating base limits for OMPL to work. Sadly, for SE(2)/SE(3), they are often violated.
         Make sure to have the yaw component to be full -pi to +pi, otherwise OMPL generates many samples that
         violate the state bounds. -->
    <FloatingBaseLowerLimits>-10 -10 -3.1416</FloatingBaseLowerLimits>
    <FloatingBaseUpperLimits> 10  10  3.1416</FloatingBaseUpperLimits>
  </SamplingProblem>
</PlannerDemoConfig>
